package biblioteca;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 * @author AnnaDC
 */

public class JFrameImportacioBiblioteca extends javax.swing.JFrame {
    
    // declaració de variables:
    final String IP = "192.168.1.18";
    final String PORT = "3306";
    final String DBASE = "ad_biblioteca";
    final String USER = "adiez";
    final String PASSWORD = "";
    
    DefaultTableModel model1 = new DefaultTableModel();
    
    /**
     * Creates new form JFrameMatricules
     */
    public JFrameImportacioBiblioteca() {
        initComponents();
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(250);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Títol", "Autor", "Editorial", "Any", "Gènere", "Tema"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Importa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Migra");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Tria Fitxer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(20, 20, 20)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        // ********** BOTÓ IMPORTA

        model1 = (DefaultTableModel) jTable1.getModel();
        
        databases.esborrataula(model1);
        
        String[] bibliotecaSplit;
        String biblioteca;
        BufferedReader br = null;
        //G:\00 Curs SOC\projectesJ\AD_biblioteca\src\csv
        File file = new File("src/csv/","importacio-biblio.csv");
        InputStreamReader ier = null;
        try {
            FileInputStream fitxer = new FileInputStream(file);
            ier = new InputStreamReader(fitxer, "ISO-8859-1");
            br = new BufferedReader(ier);
            do {
                biblioteca = br.readLine();
                bibliotecaSplit = biblioteca.split(";");
                model1.addRow(bibliotecaSplit);
            } while (biblioteca != null);
            ier.close();
            br.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Importació correcte");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        // ********** BOTÓ MIGRA
        
        int total = model1.getRowCount();
        Object[] options = {"SI", "NO"};
        int n = JOptionPane.showOptionDialog(this,
                "Estàs a punt d'inserir " + total + " registres. Hi estàs d'acord?",
                "Quina opció tries?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[1]);
        if (n == 0) {
            //esborrem la dase de dades temporal si existeix
            String esborraTaula = "drop table if exists bi10_migracio";
            //creem la taula temporal
            String creaTaula = "CREATE TABLE bi10_migracio"
                    + " (bi10_id INT(11) NOT NULL AUTO_INCREMENT,"
                    + " bi10_titol VARCHAR(200) NULL,"
                    + " bi10_autor VARCHAR(150) NULL,"
                    + " bi10_editorial  VARCHAR(100) NULL,"
                    + " bi10_any YEAR NULL,"
                    + " bi10_genere VARCHAR(45) NULL,"
                    + " bi10_tema VARCHAR(45) NULL,"
                    + " PRIMARY KEY (bi10_id))";

            //Connection conexio1 = null; // aquesta línia em sembla que no cal
            databases db1 = new databases();

            try {
                db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, esborraTaula);
                db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, creaTaula);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }

            //omplim la taula temporal
            String carregaTable = "";

            for (int i = 0; i < total; i++) {

                String titol = model1.getValueAt(i, 0).toString();
                String autor = model1.getValueAt(i, 1).toString();
                String editorial = model1.getValueAt(i, 2).toString();
                String any = model1.getValueAt(i, 3).toString();
                String genere = model1.getValueAt(i, 4).toString();
                String tema = model1.getValueAt(i, 5).toString();
                if (i == 0) {
                    carregaTable = carregaTable + "insert into bi99_migracio ("
                            + "bi99_titol,\n"
                            + "bi99_autor,\n"
                            + "bi99_editorial,\n"
                            + "bi99_any,\n"
                            + "bi99_genere,\n"
                            + "bi99_tema) values ('" + titol + "','" + autor + "','" + editorial + "','" + any + "','" + genere + "','" + tema + "'),";
                } else if (i != (total - 1)) {
                    carregaTable = carregaTable + "('" + titol + "','" + autor + "','" + editorial + "','" + any + "','" + genere + "','" + tema + "'),";
                } else {
                    carregaTable = carregaTable + "('" + titol + "','" + autor + "','" + editorial + "','" + any + "','" + genere + "','" + tema + "')";
                }

            }

            try {
                db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, carregaTable);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }

            try {
                //carreguem les dades auxiliars

                //esborrem autors taules auxiliars
                db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, "truncate bi04_autors");
                db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, "truncate bi05_editorials");
                db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, "truncate bi06_generes");
                db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, "truncate bi07_temes");
            } catch (SQLException ex) {
                Logger.getLogger(llegirfitxer1.class.getName()).log(Level.SEVERE, null, ex);
            }

            String generes = "select distinct(bi99_genere) from bi99_migracio";

            try {
                retorn_query rq = db1.queryDB(IP, PORT, DBASE, USER, PASSWORD, generes);

                while (rq.getRs().next()) {

                    String genere = rq.getRs().getString(1);
                    //Inserim l'autor a la base de dades
                    String insertGenere = "INSERT INTO bi06_generes\n"
                            + "(bi06_nom) VALUES ('" + genere + "')";
                    db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, insertGenere);

                }

            } catch (SQLException ex) {
                Logger.getLogger(llegirfitxer1.class.getName()).log(Level.SEVERE, null, ex);
            }

            String temes = "select distinct(bi99_tema) from bi99_migracio";

            try {
                retorn_query rq = db1.queryDB(IP, PORT, DBASE, USER, PASSWORD, temes);

                while (rq.getRs().next()) {

                    String tema = rq.getRs().getString(1);
                    //Inserim l'autor a la base de dades
                    String insertGenere = "INSERT INTO bi07_temes\n"
                            + "(bi07_nom) VALUES ('" + tema + "')";
                    db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, insertGenere);

                }

            } catch (SQLException ex) {
                Logger.getLogger(llegirfitxer1.class.getName()).log(Level.SEVERE, null, ex);
            }

            //ara ens disposem a afegir els llibres a la base de dades
            String llibres = "select * from bi99_migracio";

            try {
                retorn_query rq = db1.queryDB(IP, PORT, DBASE, USER, PASSWORD, llibres);

                while (rq.getRs().next()) {

                    String autor = rq.getRs().getString(3);

                    String querycodiAutor = "select bi04_id from bi04_autors where bi04_nom_complet='" + autor + "'";
                    retorn_query rq1 = db1.queryDB(IP, PORT, DBASE, USER, PASSWORD, querycodiAutor);
                    rq1.getRs().next();
                    int codiautor = Integer.parseInt(rq1.getRs().getString(1));

                    String editorial = rq.getRs().getString(4);

                    String querycodiEditorial = "select bi05_id from bi05_editorials where bi05_nom='" + editorial + "'";
                    rq1 = db1.queryDB(IP, PORT, DBASE, USER, PASSWORD, querycodiEditorial);
                    rq1.getRs().next();
                    int codieditorial = Integer.parseInt(rq1.getRs().getString(1));

                    String genere = rq.getRs().getString(6);

                    String querycodiGenere = "select bi06_id from bi06_generes where bi06_nom='" + genere + "'";
                    rq1 = db1.queryDB(IP, PORT, DBASE, USER, PASSWORD, querycodiGenere);
                    rq1.getRs().next();
                    int codigenere = Integer.parseInt(rq1.getRs().getString(1));

                    String tema = rq.getRs().getString(7);

                    String querycodiTema = "select bi07_id from bi07_temes where bi07_nom='" + tema + "'";
                    rq1 = db1.queryDB(IP, PORT, DBASE, USER, PASSWORD, querycodiTema);
                    rq1.getRs().next();
                    int codiTema = Integer.parseInt(rq1.getRs().getString(1));

                    //fimalment insereixo el registre a la base de dades
                    String insercioLlibre = "insert into bi01_llibres values(" + rq.getRs().getString(1)
                            + ",'" + rq.getRs().getString(2) + "'," + codiautor + "," + codieditorial + ",'isbn-migracio','"
                            + rq.getRs().getString(5) + "'," + codigenere + "," + codiTema + ",'',0,'2015-12-17','0',99,'edicio-migracio')";

                    System.out.println();
                }

            } catch (SQLException ex) {
                Logger.getLogger(llegirfitxer1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
        // a partir d'aquí és el que tenia jo: 
            /*
        String esborraTaula = "drop table if exists bi10_migracio";
        String creaTaula = "CREATE TABLE bi10_migracio"
                + " (bi10_id INT(11) NOT NULL AUTO_INCREMENT,"
                + " bi10_titol VARCHAR(200) NULL,"
                + " bi10_autor VARCHAR(150) NULL,"
                + " bi10_editorial  VARCHAR(100) NULL,"
                + " bi10_any YEAR NULL,"
                + " bi10_genere VARCHAR(45) NULL,"
                + " bi10_tema VARCHAR(45) NULL,"
                + " PRIMARY KEY (bi10_id))";
        
        databases db1 = new databases();
        
        try {
            db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, esborraTaula);
            db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, creaTaula);

            for (int i = 0; i < model1.getRowCount(); i++) {
                String titol = model1.getValueAt(i, 0).toString();
                String autor = model1.getValueAt(i, 1).toString();
                String editorial = model1.getValueAt(i, 2).toString();
                String any = model1.getValueAt(i, 3).toString();
                String genere = model1.getValueAt(i, 4).toString();
                String tema = model1.getValueAt(i, 5).toString();
                String sqlSentencia = "insert into bi10_migracio "
                        + "(bi10_titol, bi10_autor, bi10_editorial,"
                        + " bi10_any, bi10_genere, bi10_tema) values " +
                        "('" + titol + "', '" + autor + "', '" + editorial +
                        "'," + any + ", '" + genere + "', '" + tema + "')";
                
                db1.modifyDB(IP, PORT, DBASE, USER, PASSWORD, sqlSentencia);
            }
            JOptionPane.showMessageDialog(this, "Migració correcte");
        } catch (SQLException ex) {
            Logger.getLogger(JFrameImportacioBiblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        // ********** BOTÓ TRIA FITXER
        
        // es podria fer al constructor:
        model1 = (DefaultTableModel) jTable1.getModel(); // és con si fos la jTable
        
        databases.esborrataula(model1);
        
        String[] bibliotecaSplit;
        String biblioteca;
        BufferedReader br = null;
        
        
        
        JFileChooser fc= new JFileChooser();
        File file = new File("src/csv/");
            // és per establir la ruta, el nom de l'arxiu no cal
        
        // per establir un filtre de tipus d'arxiu:
        FileNameExtensionFilter filtre = new FileNameExtensionFilter(".csv", "csv");
        fc.setFileFilter(filtre);
                
        fc.setCurrentDirectory(file);
        fc.showOpenDialog(this);
        File file2 = fc.getSelectedFile(); // és per triar l'arxiu
        
        InputStreamReader ier = null;
        // és nou: fem un try amb recursos, ens estalviem els close del finally
        try (FileInputStream fitxer = new FileInputStream(file2)){
            //FileInputStream fitxer = new FileInputStream(file2);
            ier = new InputStreamReader(fitxer, "ISO-8859-1");
            br = new BufferedReader(ier);
            do {
                biblioteca = br.readLine();
                bibliotecaSplit = biblioteca.split(";");
                // mes-> matriculaesp[0]
                // any-> matriculaesp[1]
                // matricula-> matriculaesp[2]
                model1.addRow(bibliotecaSplit); // afegeix una filera a la jTable
            } while (biblioteca != null);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Importació correcte");
        } /*finally {
            try {
                ier.close();
                br.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }*/
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameImportacioBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameImportacioBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameImportacioBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameImportacioBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameImportacioBiblioteca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
